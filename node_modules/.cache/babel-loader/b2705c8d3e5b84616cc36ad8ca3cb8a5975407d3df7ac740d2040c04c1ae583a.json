{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asem\\\\web\\\\my_profile\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PostItem from './PostItem';\nimport CategoryFilter from './CategoryFilter';\nimport './PostList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [filteredCategory, setFilteredCategory] = useState('');\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const response = await axios.get('http://localhost:4444/posts');\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Failed to fetch posts', error);\n      }\n    }\n    async function fetchCategories() {\n      try {\n        const response = await axios.get('http://localhost:4444/categories');\n        setCategories(response.data);\n      } catch (error) {\n        console.error('Failed to fetch categories', error);\n      }\n    }\n    fetchPosts();\n    fetchCategories();\n  }, []);\n  const handleFilterChange = category => {\n    setFilteredCategory(category);\n  };\n  const filteredPosts = filteredCategory ? posts.filter(post => post.category === filteredCategory) : posts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: [/*#__PURE__*/_jsxDEV(CategoryFilter, {\n      categories: categories,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"BeIu8mQ4mIuYYSH8rAnzfnyIOEA=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","axios","PostItem","CategoryFilter","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","categories","setCategories","filteredCategory","setFilteredCategory","fetchPosts","response","get","data","error","console","fetchCategories","handleFilterChange","category","filteredPosts","filter","post","className","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","_c","$RefreshReg$"],"sources":["C:/Users/Asem/web/my_profile/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PostItem from './PostItem';\r\nimport CategoryFilter from './CategoryFilter';\r\nimport './PostList.css';\r\n\r\nconst PostList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [filteredCategory, setFilteredCategory] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchPosts() {\r\n      try {\r\n        const response = await axios.get('http://localhost:4444/posts');\r\n        setPosts(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch posts', error);\r\n      }\r\n    }\r\n\r\n    async function fetchCategories() {\r\n      try {\r\n        const response = await axios.get('http://localhost:4444/categories');\r\n        setCategories(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch categories', error);\r\n      }\r\n    }\r\n\r\n    fetchPosts();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const handleFilterChange = (category) => {\r\n    setFilteredCategory(category);\r\n  };\r\n\r\n  const filteredPosts = filteredCategory\r\n    ? posts.filter((post) => post.category === filteredCategory)\r\n    : posts;\r\n\r\n  return (\r\n    <div className=\"post-list\">\r\n      <CategoryFilter categories={categories} onFilterChange={handleFilterChange} />\r\n      {filteredPosts.map((post) => (\r\n        <PostItem key={post._id} post={post} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd,eAAec,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,6BAA6B,CAAC;QAC/DP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;IAEA,eAAeE,eAAeA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,kCAAkC,CAAC;QACpEL,aAAa,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;IAEAJ,UAAU,CAAC,CAAC;IACZM,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;IACvCT,mBAAmB,CAACS,QAAQ,CAAC;EAC/B,CAAC;EAED,MAAMC,aAAa,GAAGX,gBAAgB,GAClCJ,KAAK,CAACgB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,QAAQ,KAAKV,gBAAgB,CAAC,GAC1DJ,KAAK;EAET,oBACEH,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtB,OAAA,CAACF,cAAc;MAACO,UAAU,EAAEA,UAAW;MAACkB,cAAc,EAAEP;IAAmB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7ET,aAAa,CAACU,GAAG,CAAER,IAAI,iBACtBpB,OAAA,CAACH,QAAQ;MAAgBuB,IAAI,EAAEA;IAAK,GAArBA,IAAI,CAACS,GAAG;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA5CID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}