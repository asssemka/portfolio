{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asem\\\\web\\\\my_profile\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport CategoryFilter from './CategoryFilter';\nimport './PostList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [filteredCategory, setFilteredCategory] = useState('');\n  const [editingPost, setEditingPost] = useState(null);\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const response = await axios.get('http://localhost:4444/posts');\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Failed to fetch posts', error);\n      }\n    }\n    async function fetchCategories() {\n      try {\n        const response = await axios.get('http://localhost:4444/categories');\n        setCategories(response.data);\n      } catch (error) {\n        console.error('Failed to fetch categories', error);\n      }\n    }\n    fetchPosts();\n    fetchCategories();\n  }, []);\n  const handleFilterChange = category => {\n    setFilteredCategory(category);\n  };\n  const handleEdit = post => {\n    setEditingPost(post);\n  };\n  const handleDelete = postId => {\n    setPosts(posts.filter(post => post._id !== postId));\n  };\n  const handleSuccess = () => {\n    setEditingPost(null);\n    async function fetchPosts() {\n      try {\n        const response = await axios.get('http://localhost:4444/posts');\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Failed to fetch posts', error);\n      }\n    }\n    fetchPosts();\n  };\n  const filteredPosts = filteredCategory ? posts.filter(post => post.category === filteredCategory) : posts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: [/*#__PURE__*/_jsxDEV(CategoryFilter, {\n      categories: categories,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), editingPost ? /*#__PURE__*/_jsxDEV(PostForm, {\n      postId: editingPost._id,\n      initialData: editingPost,\n      onSuccess: handleSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEditingPost({}),\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      onDelete: handleDelete,\n      onEdit: handleEdit\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"+LgYUMbwj3WdAiGlewjUr5M+KZQ=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","axios","PostItem","PostForm","CategoryFilter","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","categories","setCategories","filteredCategory","setFilteredCategory","editingPost","setEditingPost","fetchPosts","response","get","data","error","console","fetchCategories","handleFilterChange","category","handleEdit","post","handleDelete","postId","filter","_id","handleSuccess","filteredPosts","className","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","initialData","onSuccess","onClick","map","onDelete","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/Asem/web/my_profile/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport CategoryFilter from './CategoryFilter';\r\nimport './PostList.css';\r\n\r\nconst PostList = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [filteredCategory, setFilteredCategory] = useState('');\r\n  const [editingPost, setEditingPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchPosts() {\r\n      try {\r\n        const response = await axios.get('http://localhost:4444/posts');\r\n        setPosts(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch posts', error);\r\n      }\r\n    }\r\n\r\n    async function fetchCategories() {\r\n      try {\r\n        const response = await axios.get('http://localhost:4444/categories');\r\n        setCategories(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch categories', error);\r\n      }\r\n    }\r\n\r\n    fetchPosts();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const handleFilterChange = (category) => {\r\n    setFilteredCategory(category);\r\n  };\r\n\r\n  const handleEdit = (post) => {\r\n    setEditingPost(post);\r\n  };\r\n\r\n  const handleDelete = (postId) => {\r\n    setPosts(posts.filter(post => post._id !== postId));\r\n  };\r\n\r\n  const handleSuccess = () => {\r\n    setEditingPost(null);\r\n    async function fetchPosts() {\r\n      try {\r\n        const response = await axios.get('http://localhost:4444/posts');\r\n        setPosts(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch posts', error);\r\n      }\r\n    }\r\n    fetchPosts();\r\n  };\r\n\r\n  const filteredPosts = filteredCategory\r\n    ? posts.filter((post) => post.category === filteredCategory)\r\n    : posts;\r\n\r\n  return (\r\n    <div className=\"post-list\">\r\n      <CategoryFilter categories={categories} onFilterChange={handleFilterChange} />\r\n      {editingPost ? (\r\n        <PostForm\r\n          postId={editingPost._id}\r\n          initialData={editingPost}\r\n          onSuccess={handleSuccess}\r\n        />\r\n      ) : (\r\n        <button onClick={() => setEditingPost({})}>Add Post</button>\r\n      )}\r\n      {filteredPosts.map((post) => (\r\n        <PostItem\r\n          key={post._id}\r\n          post={post}\r\n          onDelete={handleDelete}\r\n          onEdit={handleEdit}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}